"use strict";(self.webpackChunkr_14_documentation=self.webpackChunkr_14_documentation||[]).push([[4194],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),g=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=g(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=g(n),u=r,h=d["".concat(l,".").concat(u)]||d[u]||c[u]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var g=2;g<i;g++)o[g]=n[g];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7334:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>g});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:1,title:"Garage Integration",description:"qb-garages by default"},o="Setting up Garage Integration",s={unversionedId:"r14-smallresources/Setting Up Subsystems/garages",id:"r14-smallresources/Setting Up Subsystems/garages",title:"Garage Integration",description:"qb-garages by default",source:"@site/docs/r14-smallresources/Setting Up Subsystems/garages.md",sourceDirName:"r14-smallresources/Setting Up Subsystems",slug:"/r14-smallresources/Setting Up Subsystems/garages",permalink:"/r14-smallresources/Setting Up Subsystems/garages",draft:!1,editUrl:"https://github.com/regalonefour/regalonefour.github.io/blob/main/docs/r14-smallresources/Setting Up Subsystems/garages.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Garage Integration",description:"qb-garages by default"},sidebar:"tutorialSidebar",previous:{title:"Setting Up Subsystems",permalink:"/category/setting-up-subsystems-1"},next:{title:"Breathalyzer",permalink:"/r14-smallresources/Setting Up Subsystems/breathalyzer"}},l={},g=[],p={toc:g};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setting-up-garage-integration"},"Setting up Garage Integration"),(0,r.kt)("h1",{id:"out-of-the-box"},"Out of the Box"),(0,r.kt)("p",null,"By default, r14-evidence is designed to integrate with qb-garages without any further configuration or\nmodification necessary to the script. In the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.lua")," file, you will find the included paramaters\nfor the default qb-core garage system. The table below specifies the names of the events triggered when a\nvehicle is removed or placed into a garage, along with the position of the argument which holds the plate\nstring. The script then uses this information to either load the evidence from the databse when it is removed\nor to save the evidence of that vehicle and clear it from the evidence table held in the server-side of the\nscript in order to save memory and resources."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="r14-evidence Gararge Config Table" showLineNumbers',title:'"r14-evidence',Gararge:!0,Config:!0,'Table"':!0,showLineNumbers:!0},"Config.VehInAndOut = { -- this configures your server side event that triggers when garaging or ungaraging a vehicle, the paramaters for base qb-garages are included\n    InEvent = 'qb-garage:server:updateVehicle',\n    InState = 1, -- the value of the variable specified by InStateVar receieved when placing a vehicle in a garage\n    InStateVar = 1, -- the position of the argument that is received for the vehicle state when putting it in a garage\n    InPlateVar = 5, -- the position of the argument that is received for the vehicle plate when putting it in a garage\n    OutEvent = 'qb-garage:server:updateVehicleState',\n    OutState = 0, -- the state receieved when placing a vehicle in a garage\n    OutStateVar = 1,  -- the position of the argument that is received for the vehicle state when putting it in a garage\n    OutPlateVar = 2, -- the position of the argument that is received for the vehicle plate when taking it out of a garage\n}\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Never make changes to ",(0,r.kt)("strong",{parentName:"p"},"ANY")," script without making a backup first, you never know what might happen!")),(0,r.kt)("h1",{id:"integrating-a-third-party-script"},"Integrating A Third Party Script"),(0,r.kt)("p",null,"If you desire to configure r14-evidence to integreate with your garage script, you can use the following guide to help\nyou do so, but it is important to note that the script does not require it to function properly! By default, any existing\nevidence in the vehicle database will be loaded when a player either generates evidence in that vehicle, or when they search\nthat vehicle for evidence. It will simply remain in the server evidence table until the script restarts, but will not cause\nissues with the script beyond taking up additional memory. "),(0,r.kt)("p",null,"To better understand on how this config works, lets take a look at an older version of a popular modification of qb-garages by\nJDev, which uses a network event triggers of the same name, but with differently ordered arguments."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"This script was recently modified as of 10/2022 and no longer requires a modification to the config to be compatible! ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="JonasDev99/qb-garages Server-side Network Event Handler" showLineNumbers',title:'"JonasDev99/qb-garages',"Server-side":!0,Network:!0,Event:!0,'Handler"':!0,showLineNumbers:!0},"\nRegisterNetEvent('qb-garage:server:updateVehicle', function(state, fuel, engine, body, properties, plate, garage, location, damage)\n    if location and type(location) == 'vector3' then\n        if StoreDamageAccuratly then\n            MySQL.update('UPDATE player_vehicles SET state = ?, garage = ?, fuel = ?, engine = ?, body = ?, mods = ?, parkingspot = ?, damage = ? WHERE plate = ?',{state, garage, fuel, engine, body, json.encode(properties), json.encode(location), json.encode(damage), plate})\n        else\n            MySQL.update('UPDATE player_vehicles SET state = ?, garage = ?, fuel = ?, engine = ?, body = ?, mods = ?, parkingspot = ? WHERE plate = ?',{state, garage, fuel, engine, body, json.encode(properties), json.encode(location), plate})\n        end\n    else\n        if StoreDamageAccuratly then\n            MySQL.update('UPDATE player_vehicles SET state = ?, garage = ?, fuel = ?, engine = ?, body = ?, mods = ?, damage = ? WHERE plate = ?',{state, garage, fuel, engine, body, json.encode(properties), json.encode(damage), plate})\n        else\n            MySQL.update('UPDATE player_vehicles SET state = ?, garage = ?, fuel = ?, engine = ?, body = ?, mods = ? WHERE plate = ?', {state, garage, fuel, engine, body, json.encode(properties), plate})\n        end\n    end\nend)\n")),(0,r.kt)("p",null,"Here in ",(0,r.kt)("inlineCode",{parentName:"p"},"'qb-garage:server:updateVehicle'")," we can see that our original config uses this event to track when a vehicle is returned\nto it's garage, it will check the argument at the ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," position according to ",(0,r.kt)("inlineCode",{parentName:"p"},"InStateVar"),", and if it equals the value defined in\n",(0,r.kt)("inlineCode",{parentName:"p"},"InState")," r14-evidence will then save the vehicle's evidence to database and remove it from it's main evidence table. To do this, it\nneeds to find the plate of the vehicle in question, and checks the argument in position ",(0,r.kt)("inlineCode",{parentName:"p"},"5")," as defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"InPlateVar"),". When it does\nthis however, it pulls the vehicle properties table. In this case, we would need to change ",(0,r.kt)("inlineCode",{parentName:"p"},"InPlateVar")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"6")," in order it to properly\naccess the plate of this function!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="JonasDev99/qb-garages Server-side Network Event Handler" showLineNumbers',title:'"JonasDev99/qb-garages',"Server-side":!0,Network:!0,Event:!0,'Handler"':!0,showLineNumbers:!0},"RegisterNetEvent('qb-garage:server:updateVehicleState', function(state, plate, garage)\n    MySQL.update('UPDATE player_vehicles SET state = ?, garage = ?, depotprice = ? WHERE plate = ?',{state, garage, 0, plate})\nend)\n")),(0,r.kt)("p",null,"To properly determine when a vehicle is pulled out of a garage, and to load it's evidence straight away, we again go to the server/main.lua to\nfind and access the ",(0,r.kt)("inlineCode",{parentName:"p"},"'qb-garage:server:updateVehicleState'"),"network event. Here, we check the ",(0,r.kt)("inlineCode",{parentName:"p"},"OutStateVar")," at position ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," and compare\nit to the ",(0,r.kt)("inlineCode",{parentName:"p"},"OutState"),". When it matches this, we then pull the plate from argument ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," as defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"OutPlateVar")," and r14-evidence\nsubsequently loads the vehicle evidence from the database."))}c.isMDXComponent=!0}}]);