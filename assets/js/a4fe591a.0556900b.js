"use strict";(self.webpackChunkr_14_documentation=self.webpackChunkr_14_documentation||[]).push([[775],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>g});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},d=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),y=s(r),p=a,g=y["".concat(c,".").concat(p)]||y[p]||u[p]||o;return r?t.createElement(g,l(l({ref:n},d),{},{components:r})):t.createElement(g,l({ref:n},d))}));function g(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=p;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[y]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},89:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var t=r(7462),a=(r(7294),r(3905));const o={sidebar_position:4,title:"Updating qb-policejob",description:"Removing the qb-policejob/client/evidence.lua and duplicated server events."},l=void 0,i={unversionedId:"r14-evidence/Installation Process/qb-core/qbpolicejob",id:"r14-evidence/Installation Process/qb-core/qbpolicejob",title:"Updating qb-policejob",description:"Removing the qb-policejob/client/evidence.lua and duplicated server events.",source:"@site/docs/r14-evidence/Installation Process/qb-core/qbpolicejob.md",sourceDirName:"r14-evidence/Installation Process/qb-core",slug:"/r14-evidence/Installation Process/qb-core/qbpolicejob",permalink:"/r14-evidence/Installation Process/qb-core/qbpolicejob",draft:!1,editUrl:"https://github.com/regalonefour/regalonefour.github.io/blob/main/docs/r14-evidence/Installation Process/qb-core/qbpolicejob.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Updating qb-policejob",description:"Removing the qb-policejob/client/evidence.lua and duplicated server events."},sidebar:"tutorialSidebar",previous:{title:"Updating qb-core",permalink:"/r14-evidence/Installation Process/qb-core/qbcore"},next:{title:"Updating qb-smallresources",permalink:"/r14-evidence/Installation Process/qb-core/qbsmallresources"}},c={},s=[{value:"Deleting Existing Evidence Files",id:"deleting-existing-evidence-files",level:2},{value:"Removing Existing Server Events",id:"removing-existing-server-events",level:2},{value:"Removing Existing Server Callbacks",id:"removing-existing-server-callbacks",level:2},{value:"Removing Existing Server Commands",id:"removing-existing-server-commands",level:2},{value:"Preconfigured Server File",id:"preconfigured-server-file",level:2}],d={toc:s},y="wrapper";function u(e){let{components:n,...o}=e;return(0,a.kt)(y,(0,t.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Because r14-evidence uses many of the event names as qb-policejob to maintain compatability with existing\nresources, we will need to remove the existing code which provides for evidence generation and handling\nfrom the ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob/client/evidence.lua")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob/server/main.lua")," files. Additionally,\nif you have resources which are clones of ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob"),", such as ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-fib"),", you will need to repeat\nthis process for those as well! You do not need multiple versions of evidence per job, and can instead include\nall jobs that need access to evidence under the included ",(0,a.kt)("inlineCode",{parentName:"p"},"Config.AuthorizedJobs.LEO")," table."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Never make changes to ",(0,a.kt)("strong",{parentName:"p"},"ANY")," script without making a backup first, you never know what might happen!")),(0,a.kt)("h2",{id:"deleting-existing-evidence-files"},"Deleting Existing Evidence Files"),(0,a.kt)("p",null,"The first step of our process will be simply deleting the ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob/client/evidence.lua")," file from our\nresource, this will prevent the duplication of evidence creation when firing a weapon, and prevent an unecessary\nhit to performance caused by having an unused evidence system running in qb-policejob."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Deleting evidence.lua from our qb-policejob resource",src:r(2596).Z,width:"1287",height:"821"})),(0,a.kt)("h2",{id:"removing-existing-server-events"},"Removing Existing Server Events"),(0,a.kt)("p",null,"Next, we will need to access our ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob/server/main.lua")," and remove the following events which are\nused in the default qb-policejob evidence system. It is important to clear all of these events so that they\ndo not cause errors by accidentally being triggered by events in r14-evidence, and conversley, triggering events\nin r14-evidence. Please use CTRL-F to search for, and entirely remove, these networked event handlers. "),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you have resources which are cloned versions of qb-policejob, you may need to search them for events with these names as well!")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='Server Events to be Removed' showLineNumbers",title:"'Server",Events:!0,to:!0,be:!0,"Removed'":!0,showLineNumbers:!0},"'evidence:server:UpdateStatus' \n'evidence:server:CreateBloodDrop' \n'evidence:server:CreateFingerDrop' \n'evidence:server:ClearBlooddrops' \n'evidence:server:AddBlooddropToInventory' \n'evidence:server:AddFingerprintToInventory' \n'evidence:server:CreateCasing' \n'evidence:server:ClearCasings' \n'evidence:server:AddCasingToInventory'\n")),(0,a.kt)("h2",{id:"removing-existing-server-callbacks"},"Removing Existing Server Callbacks"),(0,a.kt)("p",null,"We will need to remove the ",(0,a.kt)("inlineCode",{parentName:"p"},"police:GetPlayerStatus")," callback as well from our ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob/server/main.lua")," file.\nBecause we want this callback available for the Check Status radial menu option, it will need to be moved to r14-evidence\nso that it can properly supply status effects to the client using it. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-policejob Server Callback To Be Removed' showLineNumbers",title:"'qb-policejob",Server:!0,Callback:!0,To:!0,Be:!0,"Removed'":!0,showLineNumbers:!0},"QBCore.Functions.CreateCallback('police:GetPlayerStatus', function(_, cb, playerId)\n    local Player = QBCore.Functions.GetPlayer(playerId)\n    local statList = {}\n    if Player then\n        if PlayerStatus[Player.PlayerData.source] and next(PlayerStatus[Player.PlayerData.source]) then\n            for k in pairs(PlayerStatus[Player.PlayerData.source]) do\n                statList[#statList+1] = PlayerStatus[Player.PlayerData.source][k].text\n            end\n        end\n    end\n    cb(statList)\nend)\n")),(0,a.kt)("h2",{id:"removing-existing-server-commands"},"Removing Existing Server Commands"),(0,a.kt)("p",null,"Lastly we will need to remove the ",(0,a.kt)("inlineCode",{parentName:"p"},"'clearblood'")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"'clearcasings'")," commands from our qb-policejob server\nscript as these have been replaced by a combined ",(0,a.kt)("inlineCode",{parentName:"p"},"'clearevidence'")," command in r14-evidence. Once we have done this,\nwe will finally need to remove the ",(0,a.kt)("inlineCode",{parentName:"p"},"'takedna'")," command, as the new resource now allows police to use qb-target in\norder to collect evidence versus a command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-policejob Server Command To Be Removed' showLineNumbers",title:"'qb-policejob",Server:!0,Command:!0,To:!0,Be:!0,"Removed'":!0,showLineNumbers:!0},'QBCore.Commands.Add("clearblood", Lang:t("commands.clearblood"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("evidence:client:ClearBlooddropsInArea", src)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-policejob Server Command To Be Removed' showLineNumbers",title:"'qb-policejob",Server:!0,Command:!0,To:!0,Be:!0,"Removed'":!0,showLineNumbers:!0},'QBCore.Commands.Add("clearcasings", Lang:t("commands.clear_casign"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("evidence:client:ClearCasingsInArea", src)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-policejob Server Command To Be Removed' showLineNumbers",title:"'qb-policejob",Server:!0,Command:!0,To:!0,Be:!0,"Removed'":!0,showLineNumbers:!0},'QBCore.Commands.Add("takedna", Lang:t("commands.takedna"), {{name = "id", help = Lang:t(\'info.player_id\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    local OtherPlayer = QBCore.Functions.GetPlayer(tonumber(args[1]))\n    if not OtherPlayer or Player.PlayerData.job.name ~= "police" or not Player.PlayerData.job.onduty then return end\n    if Player.Functions.RemoveItem("empty_evidence_bag", 1) then\n        local info = {\n            label = Lang:t(\'info.dna_sample\'),\n            type = "dna",\n            dnalabel = DnaHash(OtherPlayer.PlayerData.citizenid)\n        }\n        if not Player.Functions.AddItem("filled_evidence_bag", 1, false, info) then return end\n        TriggerClientEvent("inventory:client:ItemBox", src, QBCore.Shared.Items["filled_evidence_bag"], "add")\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.have_evidence_bag"), "error")\n    end\nend)\n')),(0,a.kt)("p",null,"At this point we have completed the modification of our qb-policejob script and can now continue with our installation process!"),(0,a.kt)("h2",{id:"preconfigured-server-file"},"Preconfigured Server File"),(0,a.kt)("p",null,"If you are use a recent version of qb-core and a stock qb-policejob, you may be able to use the modified version of ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob/server/main.lua")," below that comes with\nall of these these events plus evidence-related functions and variables removed. If you have custom code in your ",(0,a.kt)("inlineCode",{parentName:"p"},"qb-policejob/server/main.lua"),", please follow the process\nbove for modifying your sever code!"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This code is current as of 4/1/2023, it will not contain updates more recent than this, and may not be compatible with older version of qb-policejob!")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='Modified qb-policejob/server/main.lua' showLineNumbers",title:"'Modified","qb-policejob/server/main.lua'":!0,showLineNumbers:!0},'-- Variables\nlocal Plates = {}\nlocal Objects = {}\nlocal QBCore = exports[\'qb-core\']:GetCoreObject()\nlocal updatingCops = false\n\n-- Functions\nlocal function UpdateBlips()\n    local dutyPlayers = {}\n    local players = QBCore.Functions.GetQBPlayers()\n    for _, v in pairs(players) do\n        if v and (v.PlayerData.job.name == "police" or v.PlayerData.job.name == "ambulance") and v.PlayerData.job.onduty then\n            local coords = GetEntityCoords(GetPlayerPed(v.PlayerData.source))\n            local heading = GetEntityHeading(GetPlayerPed(v.PlayerData.source))\n            dutyPlayers[#dutyPlayers+1] = {\n                source = v.PlayerData.source,\n                label = v.PlayerData.metadata["callsign"],\n                job = v.PlayerData.job.name,\n                location = {\n                    x = coords.x,\n                    y = coords.y,\n                    z = coords.z,\n                    w = heading\n                }\n            }\n        end\n    end\n    TriggerClientEvent("police:client:UpdateBlips", -1, dutyPlayers)\nend\n\nlocal function CreateObjectId()\n    if Objects then\n        local objectId = math.random(10000, 99999)\n        while Objects[objectId] do\n            objectId = math.random(10000, 99999)\n        end\n        return objectId\n    else\n        local objectId = math.random(10000, 99999)\n        return objectId\n    end\nend\n\nlocal function IsVehicleOwned(plate)\n    local result = MySQL.scalar.await(\'SELECT plate FROM player_vehicles WHERE plate = ?\', {plate})\n    return result\nend\n\nlocal function GetCurrentCops()\n    local amount = 0\n    local players = QBCore.Functions.GetQBPlayers()\n    for _, v in pairs(players) do\n        if v and v.PlayerData.job.name == "police" and v.PlayerData.job.onduty then\n            amount += 1\n        end\n    end\n    return amount\nend\n\nlocal function DnaHash(s)\n    local h = string.gsub(s, ".", function(c)\n        return string.format("%02x", string.byte(c))\n    end)\n    return h\nend\n\n-- Commands\nQBCore.Commands.Add("spikestrip", Lang:t("commands.place_spike"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent(\'police:client:SpawnSpikeStrip\', src)\n    end\nend)\n\nQBCore.Commands.Add("grantlicense", Lang:t("commands.license_grant"), {{name = "id", help = Lang:t(\'info.player_id\')}, {name = "license", help = Lang:t(\'info.license_type\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.grade.level >= Config.LicenseRank then\n        if args[2] == "driver" or args[2] == "weapon" then\n            local SearchedPlayer = QBCore.Functions.GetPlayer(tonumber(args[1]))\n            if not SearchedPlayer then return end\n            local licenseTable = SearchedPlayer.PlayerData.metadata["licences"]\n            if licenseTable[args[2]] then\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.license_already"), "error")\n                return\n            end\n            licenseTable[args[2]] = true\n            SearchedPlayer.Functions.SetMetaData("licences", licenseTable)\n            TriggerClientEvent(\'QBCore:Notify\', SearchedPlayer.PlayerData.source, Lang:t("success.granted_license"), "success")\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("success.grant_license"), "success")\n        else\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.error_license_type"), "error")\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.rank_license"), "error")\n    end\nend)\n\nQBCore.Commands.Add("revokelicense", Lang:t("commands.license_revoke"), {{name = "id", help = Lang:t(\'info.player_id\')}, {name = "license", help = Lang:t(\'info.license_type\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.grade.level >= Config.LicenseRank then\n        if args[2] == "driver" or args[2] == "weapon" then\n            local SearchedPlayer = QBCore.Functions.GetPlayer(tonumber(args[1]))\n            if not SearchedPlayer then return end\n            local licenseTable = SearchedPlayer.PlayerData.metadata["licences"]\n            if not licenseTable[args[2]] then\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.error_license"), "error")\n                return\n            end\n            licenseTable[args[2]] = false\n            SearchedPlayer.Functions.SetMetaData("licences", licenseTable)\n            TriggerClientEvent(\'QBCore:Notify\', SearchedPlayer.PlayerData.source, Lang:t("error.revoked_license"), "error")\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("success.revoke_license"), "success")\n        else\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.error_license"), "error")\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.rank_revoke"), "error")\n    end\nend)\n\nQBCore.Commands.Add("pobject", Lang:t("commands.place_object"), {{name = "type",help = Lang:t("info.poobject_object")}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    local type = args[1]:lower()\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        if type == "cone" then\n            TriggerClientEvent("police:client:spawnCone", src)\n        elseif type == "barrier" then\n            TriggerClientEvent("police:client:spawnBarrier", src)\n        elseif type == "roadsign" then\n            TriggerClientEvent("police:client:spawnRoadSign", src)\n        elseif type == "tent" then\n            TriggerClientEvent("police:client:spawnTent", src)\n        elseif type == "light" then\n            TriggerClientEvent("police:client:spawnLight", src)\n        elseif type == "delete" then\n            TriggerClientEvent("police:client:deleteObject", src)\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("cuff", Lang:t("commands.cuff_player"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:CuffPlayer", src)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("escort", Lang:t("commands.escort"), {}, false, function(source)\n    local src = source\n    TriggerClientEvent("police:client:EscortPlayer", src)\nend)\n\nQBCore.Commands.Add("callsign", Lang:t("commands.callsign"), {{name = "name", help = Lang:t(\'info.callsign_name\')}}, false, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    Player.Functions.SetMetaData("callsign", table.concat(args, " "))\nend)\n\nQBCore.Commands.Add("jail", Lang:t("commands.jail_player"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:JailPlayer", src)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("unjail", Lang:t("commands.unjail_player"), {{name = "id", help = Lang:t(\'info.player_id\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        local playerId = tonumber(args[1])\n        TriggerClientEvent("prison:client:UnjailPerson", playerId)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("seizecash", Lang:t("commands.seizecash"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:SeizeCash", src)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("sc", Lang:t("commands.softcuff"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:CuffPlayerSoft", src)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("cam", Lang:t("commands.camera"), {{name = "camid", help = Lang:t(\'info.camera_id\')}}, false, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:ActiveCamera", src, tonumber(args[1]))\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("flagplate", Lang:t("commands.flagplate"), {{name = "plate", help = Lang:t(\'info.plate_number\')}, {name = "reason", help = Lang:t(\'info.flag_reason\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        local reason = {}\n        for i = 2, #args, 1 do\n            reason[#reason+1] = args[i]\n        end\n        Plates[args[1]:upper()] = {\n            isflagged = true,\n            reason = table.concat(reason, " ")\n        }\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.vehicle_flagged", {vehicle = args[1]:upper(), reason = table.concat(reason, " ")}))\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("unflagplate", Lang:t("commands.unflagplate"), {{name = "plate", help = Lang:t(\'info.plate_number\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        if Plates and Plates[args[1]:upper()] then\n            if Plates[args[1]:upper()].isflagged then\n                Plates[args[1]:upper()].isflagged = false\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.unflag_vehicle", {vehicle = args[1]:upper()}))\n            else\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.vehicle_not_flag"), \'error\')\n            end\n        else\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.vehicle_not_flag"), \'error\')\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("plateinfo", Lang:t("commands.plateinfo"), {{name = "plate", help = Lang:t(\'info.plate_number\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        if Plates and Plates[args[1]:upper()] then\n            if Plates[args[1]:upper()].isflagged then\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t(\'success.vehicle_flagged\', {plate = args[1]:upper(), reason = Plates[args[1]:upper()].reason}), \'success\')\n            else\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.vehicle_not_flag"), \'error\')\n            end\n        else\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.vehicle_not_flag"), \'error\')\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("depot", Lang:t("commands.depot"), {{name = "price", help = Lang:t(\'info.impound_price\')}}, false, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:ImpoundVehicle", src, false, tonumber(args[1]))\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("impound", Lang:t("commands.impound"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:ImpoundVehicle", src, true)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("paytow", Lang:t("commands.paytow"), {{name = "id", help = Lang:t(\'info.player_id\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        local playerId = tonumber(args[1])\n        local OtherPlayer = QBCore.Functions.GetPlayer(playerId)\n        if OtherPlayer then\n            if OtherPlayer.PlayerData.job.name == "tow" then\n                OtherPlayer.Functions.AddMoney("bank", 500, "police-tow-paid")\n                TriggerClientEvent(\'QBCore:Notify\', OtherPlayer.PlayerData.source, Lang:t("success.tow_paid"), \'success\')\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.tow_driver_paid"))\n            else\n                TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.not_towdriver"), \'error\')\n            end\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("paylawyer", Lang:t("commands.paylawyer"), {{name = "id",help = Lang:t(\'info.player_id\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" or Player.PlayerData.job.name == "judge" then\n        local playerId = tonumber(args[1])\n        local OtherPlayer = QBCore.Functions.GetPlayer(playerId)\n        if not OtherPlayer then return end\n        if OtherPlayer.PlayerData.job.name == "lawyer" then\n            OtherPlayer.Functions.AddMoney("bank", 500, "police-lawyer-paid")\n            TriggerClientEvent(\'QBCore:Notify\', OtherPlayer.PlayerData.source, Lang:t("success.tow_paid"), \'success\')\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.paid_lawyer"))\n        else\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.not_lawyer"), "error")\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add(\'fine\', Lang:t("commands.fine"), {{name = \'id\', help = Lang:t(\'info.player_id\')}, {name = \'amount\', help = Lang:t(\'info.amount\')}}, false, function(source, args)\n    local biller = QBCore.Functions.GetPlayer(source)\n    local billed = QBCore.Functions.GetPlayer(tonumber(args[1]))\n    local amount = tonumber(args[2])\n    if biller.PlayerData.job.name == "police" then\n        if billed ~= nil then\n            if biller.PlayerData.citizenid ~= billed.PlayerData.citizenid then\n                if amount and amount > 0 then\n                    if billed.Functions.RemoveMoney(\'bank\', amount, "paid-fine") then\n                        TriggerClientEvent(\'QBCore:Notify\', source, Lang:t("info.fine_issued"), \'success\')\n                        TriggerClientEvent(\'QBCore:Notify\', billed.PlayerData.source, Lang:t("info.received_fine"))\n                        exports[\'qb-management\']:AddMoney(biller.PlayerData.job.name, amount)\n                    elseif billed.Functions.RemoveMoney(\'cash\', amount, "paid-fine") then\n                        TriggerClientEvent(\'QBCore:Notify\', source, Lang:t("info.fine_issued"), \'success\')\n                        TriggerClientEvent(\'QBCore:Notify\', billed.PlayerData.source, Lang:t("info.received_fine"))\n                        exports[\'qb-management\']:AddMoney(biller.PlayerData.job.name, amount)\n                    else\n                        MySQL.Async.insert(\'INSERT INTO phone_invoices (citizenid, amount, society, sender, sendercitizenid) VALUES (?, ?, ?, ?, ?)\',{billed.PlayerData.citizenid, amount, biller.PlayerData.job.name, biller.PlayerData.charinfo.firstname, biller.PlayerData.citizenid}, function(id)\n                            if id then\n                                TriggerClientEvent(\'qb-phone:client:AcceptorDenyInvoice\', billed.PlayerData.source, id, biller.PlayerData.charinfo.firstname, biller.PlayerData.job.name, biller.PlayerData.citizenid, amount, GetInvokingResource())\n                            end\n                        end)\n                        TriggerClientEvent(\'qb-phone:RefreshPhone\', billed.PlayerData.source)\n                    end\n                else\n                    TriggerClientEvent(\'QBCore:Notify\', source, Lang:t("error.amount_higher"), \'error\')\n                end\n            else\n                TriggerClientEvent(\'QBCore:Notify\', source, Lang:t("error.fine_yourself"), \'error\')\n            end\n        else\n            TriggerClientEvent(\'QBCore:Notify\', source, Lang:t("error.not_online"), \'error\')\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', source, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("anklet", Lang:t("commands.anklet"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:CheckDistance", src)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("ankletlocation", Lang:t("commands.ankletlocation"), {{name = "cid", help = Lang:t(\'info.citizen_id\')}}, true, function(source, args)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        local citizenid = args[1]\n        local Target = QBCore.Functions.GetPlayerByCitizenId(citizenid)\n        if not Target then return end\n        if Target.PlayerData.metadata["tracker"] then\n            TriggerClientEvent("police:client:SendTrackerLocation", Target.PlayerData.source, src)\n        else\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.no_anklet"), \'error\')\n        end\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nQBCore.Commands.Add("takedrivinglicense", Lang:t("commands.drivinglicense"), {}, false, function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty then\n        TriggerClientEvent("police:client:SeizeDriverLicense", source)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.on_duty_police_only"), \'error\')\n    end\nend)\n\nRegisterNetEvent(\'police:server:SendTrackerLocation\', function(coords, requestId)\n    local Target = QBCore.Functions.GetPlayer(source)\n    local msg = Lang:t(\'info.target_location\', {firstname = Target.PlayerData.charinfo.firstname, lastname = Target.PlayerData.charinfo.lastname})\n    local alertData = {\n        title = Lang:t(\'info.anklet_location\'),\n        coords = {\n            x = coords.x,\n            y = coords.y,\n            z = coords.z\n        },\n        description = msg\n    }\n    TriggerClientEvent("police:client:TrackerMessage", requestId, msg, coords)\n    TriggerClientEvent("qb-phone:client:addPoliceAlert", requestId, alertData)\nend)\n\nQBCore.Commands.Add(\'911p\', Lang:t("commands.police_report"), {{name=\'message\', help= Lang:t("commands.message_sent")}}, false, function(source, args)\n    local src = source\n    local message\n    if args[1] then message = table.concat(args, " ") else message = Lang:t("commands.civilian_call") end\n    local ped = GetPlayerPed(src)\n    local coords = GetEntityCoords(ped)\n    local players = QBCore.Functions.GetQBPlayers()\n    for _, v in pairs(players) do\n        if v and v.PlayerData.job.name == \'police\' and v.PlayerData.job.onduty then\n            local alertData = {title = Lang:t("commands.emergency_call"), coords = {x = coords.x, y = coords.y, z = coords.z}, description = message}\n            TriggerClientEvent("qb-phone:client:addPoliceAlert", v.PlayerData.source, alertData)\n            TriggerClientEvent(\'police:client:policeAlert\', v.PlayerData.source, coords, message)\n        end\n    end\nend)\n\n-- Items\nQBCore.Functions.CreateUseableItem("handcuffs", function(source)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if not Player.Functions.GetItemByName("handcuffs") then return end\n    TriggerClientEvent("police:client:CuffPlayerSoft", src)\nend)\n\nQBCore.Functions.CreateUseableItem("moneybag", function(source, item)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if not Player or not Player.Functions.GetItemByName("moneybag") or not item.info or item.info == "" or Player.PlayerData.job.name == "police" or not Player.Functions.RemoveItem("moneybag", 1, item.slot) then return end\n    Player.Functions.AddMoney("cash", tonumber(item.info.cash), "used-moneybag")\nend)\n\n-- Callbacks\nQBCore.Functions.CreateCallback(\'police:server:isPlayerDead\', function(_, cb, playerId)\n    local Player = QBCore.Functions.GetPlayer(playerId)\n    cb(Player.PlayerData.metadata["isdead"])\nend)\n\nQBCore.Functions.CreateCallback(\'police:IsSilencedWeapon\', function(source, cb, weapon)\n    local Player = QBCore.Functions.GetPlayer(source)\n    local itemInfo = Player.Functions.GetItemByName(QBCore.Shared.Weapons[weapon]["name"])\n    local retval = false\n    if itemInfo then\n        if itemInfo.info and itemInfo.info.attachments then\n            for k in pairs(itemInfo.info.attachments) do\n                if itemInfo.info.attachments[k].component == "COMPONENT_AT_AR_SUPP_02" or\n                    itemInfo.info.attachments[k].component == "COMPONENT_AT_AR_SUPP" or\n                    itemInfo.info.attachments[k].component == "COMPONENT_AT_PI_SUPP_02" or\n                    itemInfo.info.attachments[k].component == "COMPONENT_AT_PI_SUPP" then\n                    retval = true\n                end\n            end\n        end\n    end\n    cb(retval)\nend)\n\nQBCore.Functions.CreateCallback(\'police:GetDutyPlayers\', function(_, cb)\n    local dutyPlayers = {}\n    local players = QBCore.Functions.GetQBPlayers()\n    for _, v in pairs(players) do\n        if v and v.PlayerData.job.name == "police" and v.PlayerData.job.onduty then\n            dutyPlayers[#dutyPlayers+1] = {\n                source = v.PlayerData.source,\n                label = v.PlayerData.metadata["callsign"],\n                job = v.PlayerData.job.name\n            }\n        end\n    end\n    cb(dutyPlayers)\nend)\n\nQBCore.Functions.CreateCallback(\'police:GetImpoundedVehicles\', function(_, cb)\n    local vehicles = {}\n    MySQL.query(\'SELECT * FROM player_vehicles WHERE state = ?\', {2}, function(result)\n        if result[1] then\n            vehicles = result\n        end\n        cb(vehicles)\n    end)\nend)\n\nQBCore.Functions.CreateCallback(\'police:IsPlateFlagged\', function(_, cb, plate)\n    local retval = false\n    if Plates and Plates[plate] then\n        if Plates[plate].isflagged then\n            retval = true\n        end\n    end\n    cb(retval)\nend)\n\nQBCore.Functions.CreateCallback(\'police:GetCops\', function(_, cb)\n    local amount = 0\n    local players = QBCore.Functions.GetQBPlayers()\n    for _, v in pairs(players) do\n        if v and v.PlayerData.job.name == "police" and v.PlayerData.job.onduty then\n            amount = amount + 1\n        end\n    end\n    cb(amount)\nend)\n\nQBCore.Functions.CreateCallback(\'police:server:IsPoliceForcePresent\', function(_, cb)\n    local retval = false\n    local players = QBCore.Functions.GetQBPlayers()\n    for _, v in pairs(players) do\n        if v and v.PlayerData.job.name == "police" and v.PlayerData.job.grade.level >= 2 then\n            retval = true\n            break\n        end\n    end\n    cb(retval)\nend)\n\n-- Events\nAddEventHandler(\'onResourceStart\', function(resourceName)\n    if resourceName == GetCurrentResourceName() then\n        CreateThread(function()\n            MySQL.query("DELETE FROM stashitems WHERE stash = \'policetrash\'")\n        end)\n    end\nend)\n\nRegisterNetEvent(\'police:server:policeAlert\', function(text)\n    local src = source\n    local ped = GetPlayerPed(src)\n    local coords = GetEntityCoords(ped)\n    local players = QBCore.Functions.GetQBPlayers()\n    for _, v in pairs(players) do\n        if v and v.PlayerData.job.name == \'police\' and v.PlayerData.job.onduty then\n            local alertData = {title = Lang:t(\'info.new_call\'), coords = {x = coords.x, y = coords.y, z = coords.z}, description = text}\n            TriggerClientEvent("qb-phone:client:addPoliceAlert", v.PlayerData.source, alertData)\n            TriggerClientEvent(\'police:client:policeAlert\', v.PlayerData.source, coords, text)\n        end\n    end\nend)\n\nRegisterNetEvent(\'police:server:TakeOutImpound\', function(plate, garage)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = Config.Locations["impound"][garage]\n    if #(playerCoords - targetCoords) > 10.0 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    MySQL.update(\'UPDATE player_vehicles SET state = ? WHERE plate = ?\', {0, plate})\n    TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("success.impound_vehicle_removed"), \'success\')\nend)\n\nRegisterNetEvent(\'police:server:CuffPlayer\', function(playerId, isSoftcuff)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Player = QBCore.Functions.GetPlayer(src)\n    local CuffedPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not Player or not CuffedPlayer or (not Player.Functions.GetItemByName("handcuffs") and Player.PlayerData.job.name ~= "police") then return end\n\n    TriggerClientEvent("police:client:GetCuffed", CuffedPlayer.PlayerData.source, Player.PlayerData.source, isSoftcuff)\nend)\n\nRegisterNetEvent(\'police:server:EscortPlayer\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Player = QBCore.Functions.GetPlayer(source)\n    local EscortPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not Player or not EscortPlayer then return end\n\n    if (Player.PlayerData.job.name == "police" or Player.PlayerData.job.name == "ambulance") or (EscortPlayer.PlayerData.metadata["ishandcuffed"] or EscortPlayer.PlayerData.metadata["isdead"] or EscortPlayer.PlayerData.metadata["inlaststand"]) then\n        TriggerClientEvent("police:client:GetEscorted", EscortPlayer.PlayerData.source, Player.PlayerData.source)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.not_cuffed_dead"), \'error\')\n    end\nend)\n\nRegisterNetEvent(\'police:server:KidnapPlayer\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Player = QBCore.Functions.GetPlayer(source)\n    local EscortPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not Player or not EscortPlayer then return end\n\n    if EscortPlayer.PlayerData.metadata["ishandcuffed"] or EscortPlayer.PlayerData.metadata["isdead"] or EscortPlayer.PlayerData.metadata["inlaststand"] then\n        TriggerClientEvent("police:client:GetKidnappedTarget", EscortPlayer.PlayerData.source, Player.PlayerData.source)\n        TriggerClientEvent("police:client:GetKidnappedDragger", Player.PlayerData.source, EscortPlayer.PlayerData.source)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.not_cuffed_dead"), \'error\')\n    end\nend)\n\nRegisterNetEvent(\'police:server:SetPlayerOutVehicle\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local EscortPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not QBCore.Functions.GetPlayer(src) or not EscortPlayer then return end\n\n    if EscortPlayer.PlayerData.metadata["ishandcuffed"] or EscortPlayer.PlayerData.metadata["isdead"] then\n        TriggerClientEvent("police:client:SetOutVehicle", EscortPlayer.PlayerData.source)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.not_cuffed_dead"), \'error\')\n    end\nend)\n\nRegisterNetEvent(\'police:server:PutPlayerInVehicle\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local EscortPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not QBCore.Functions.GetPlayer(src) or not EscortPlayer then return end\n\n    if EscortPlayer.PlayerData.metadata["ishandcuffed"] or EscortPlayer.PlayerData.metadata["isdead"] then\n        TriggerClientEvent("police:client:PutInVehicle", EscortPlayer.PlayerData.source)\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.not_cuffed_dead"), \'error\')\n    end\nend)\n\nRegisterNetEvent(\'police:server:BillPlayer\', function(playerId, price)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Player = QBCore.Functions.GetPlayer(src)\n    local OtherPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not Player or not OtherPlayer or Player.PlayerData.job.name ~= "police" then return end\n\n    OtherPlayer.Functions.RemoveMoney("bank", price, "paid-bills")\n    exports[\'qb-management\']:AddMoney("police", price)\n    TriggerClientEvent(\'QBCore:Notify\', OtherPlayer.PlayerData.source, Lang:t("info.fine_received", {fine = price}))\nend)\n\nRegisterNetEvent(\'police:server:JailPlayer\', function(playerId, time)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Player = QBCore.Functions.GetPlayer(src)\n    local OtherPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not Player or not OtherPlayer or Player.PlayerData.job.name ~= "police" then return end\n\n    local currentDate = os.date("*t")\n    if currentDate.day == 31 then\n        currentDate.day = 30\n    end\n\n    OtherPlayer.Functions.SetMetaData("injail", time)\n    OtherPlayer.Functions.SetMetaData("criminalrecord", {\n        ["hasRecord"] = true,\n        ["date"] = currentDate\n    })\n    TriggerClientEvent("police:client:SendToJail", OtherPlayer.PlayerData.source, time)\n    TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.sent_jail_for", {time = time}))\nend)\n\nRegisterNetEvent(\'police:server:SetHandcuffStatus\', function(isHandcuffed)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player then\n        Player.Functions.SetMetaData("ishandcuffed", isHandcuffed)\n    end\nend)\n\nRegisterNetEvent(\'heli:spotlight\', function(state)\n    local serverID = source\n    TriggerClientEvent(\'heli:spotlight\', -1, serverID, state)\nend)\n\n-- RegisterNetEvent(\'police:server:FlaggedPlateTriggered\', function(camId, plate, street1, street2, blipSettings)\n--     local src = source\n--     for k, v in pairs(QBCore.Functions.GetPlayers()) do\n--         local Player = QBCore.Functions.GetPlayer(v)\n--         if Player then\n--             if (Player.PlayerData.job.name == "police" and Player.PlayerData.job.onduty) then\n--                 if street2 then\n--                     TriggerClientEvent("112:client:SendPoliceAlert", v, "flagged", {\n--                         camId = camId,\n--                         plate = plate,\n--                         streetLabel = street1 .. " " .. street2\n--                     }, blipSettings)\n--                 else\n--                     TriggerClientEvent("112:client:SendPoliceAlert", v, "flagged", {\n--                         camId = camId,\n--                         plate = plate,\n--                         streetLabel = street1\n--                     }, blipSettings)\n--                 end\n--             end\n--         end\n--     end\n-- end)\n\nRegisterNetEvent(\'police:server:SearchPlayer\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local SearchedPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not QBCore.Functions.GetPlayer(src) or not SearchedPlayer then return end\n\n    TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.cash_found", {cash = SearchedPlayer.PlayerData.money["cash"]}))\n    TriggerClientEvent(\'QBCore:Notify\', SearchedPlayer.PlayerData.source, Lang:t("info.being_searched"))\nend)\n\nRegisterNetEvent(\'police:server:SeizeCash\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Player = QBCore.Functions.GetPlayer(src)\n    local SearchedPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not Player or not SearchedPlayer then return end\n\n    local moneyAmount = SearchedPlayer.PlayerData.money["cash"]\n    local info = { cash = moneyAmount }\n    SearchedPlayer.Functions.RemoveMoney("cash", moneyAmount, "police-cash-seized")\n    Player.Functions.AddItem("moneybag", 1, false, info)\n    TriggerClientEvent(\'inventory:client:ItemBox\', src, QBCore.Shared.Items["moneybag"], "add")\n    TriggerClientEvent(\'QBCore:Notify\', SearchedPlayer.PlayerData.source, Lang:t("info.cash_confiscated"))\nend)\n\nRegisterNetEvent(\'police:server:SeizeDriverLicense\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local SearchedPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not QBCore.Functions.GetPlayer(src) or not SearchedPlayer then return end\n\n    local driverLicense = SearchedPlayer.PlayerData.metadata["licences"]["driver"]\n    if driverLicense then\n        local licenses = {["driver"] = false, ["business"] = SearchedPlayer.PlayerData.metadata["licences"]["business"]}\n        SearchedPlayer.Functions.SetMetaData("licences", licenses)\n        TriggerClientEvent(\'QBCore:Notify\', SearchedPlayer.PlayerData.source, Lang:t("info.driving_license_confiscated"))\n    else\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("error.no_driver_license"), \'error\')\n    end\nend)\n\nRegisterNetEvent(\'police:server:RobPlayer\', function(playerId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(playerId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Player = QBCore.Functions.GetPlayer(src)\n    local SearchedPlayer = QBCore.Functions.GetPlayer(playerId)\n    if not Player or not SearchedPlayer then return end\n\n    local money = SearchedPlayer.PlayerData.money["cash"]\n    Player.Functions.AddMoney("cash", money, "police-player-robbed")\n    SearchedPlayer.Functions.RemoveMoney("cash", money, "police-player-robbed")\n    TriggerClientEvent(\'QBCore:Notify\', SearchedPlayer.PlayerData.source, Lang:t("info.cash_robbed", {money = money}))\n    TriggerClientEvent(\'QBCore:Notify\', Player.PlayerData.source, Lang:t("info.stolen_money", {stolen = money}))\nend)\n\nRegisterNetEvent(\'police:server:UpdateBlips\', function()\n    -- KEEP FOR REF BUT NOT NEEDED ANYMORE.\nend)\n\nRegisterNetEvent(\'police:server:spawnObject\', function(type)\n    local src = source\n    local objectId = CreateObjectId()\n    Objects[objectId] = type\n    TriggerClientEvent("police:client:spawnObject", src, objectId, type, src)\nend)\n\nRegisterNetEvent(\'police:server:deleteObject\', function(objectId)\n    TriggerClientEvent(\'police:client:removeObject\', -1, objectId)\nend)\n\nRegisterNetEvent(\'police:server:Impound\', function(plate, fullImpound, price, body, engine, fuel)\n    local src = source\n    price = price and price or 0\n    if IsVehicleOwned(plate) then\n        if not fullImpound then\n            MySQL.query(\n                \'UPDATE player_vehicles SET state = ?, depotprice = ?, body = ?, engine = ?, fuel = ? WHERE plate = ?\',\n                {0, price, body, engine, fuel, plate})\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.vehicle_taken_depot", {price = price}))\n        else\n            MySQL.query(\n                \'UPDATE player_vehicles SET state = ?, body = ?, engine = ?, fuel = ? WHERE plate = ?\',\n                {2, body, engine, fuel, plate})\n            TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("info.vehicle_seized"))\n        end\n    end\nend)\n\nRegisterNetEvent(\'police:server:UpdateCurrentCops\', function()\n    local amount = 0\n    local players = QBCore.Functions.GetQBPlayers()\n    if updatingCops then return end\n    updatingCops = true\n    for _, v in pairs(players) do\n        if v and v.PlayerData.job.name == "police" and v.PlayerData.job.onduty then\n            amount += 1\n        end\n    end\n    TriggerClientEvent("police:SetCopCount", -1, amount)\n    updatingCops = false\nend)\n\nRegisterNetEvent(\'police:server:showFingerprint\', function(playerId)\n    local src = source\n    TriggerClientEvent(\'police:client:showFingerprint\', playerId, src)\n    TriggerClientEvent(\'police:client:showFingerprint\', src, playerId)\nend)\n\nRegisterNetEvent(\'police:server:showFingerprintId\', function(sessionId)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    local fid = Player.PlayerData.metadata["fingerprint"]\n    TriggerClientEvent(\'police:client:showFingerprintId\', sessionId, fid)\n    TriggerClientEvent(\'police:client:showFingerprintId\', src, fid)\nend)\n\nRegisterNetEvent(\'police:server:SetTracker\', function(targetId)\n    local src = source\n    local playerPed = GetPlayerPed(src)\n    local targetPed = GetPlayerPed(targetId)\n    local playerCoords = GetEntityCoords(playerPed)\n    local targetCoords = GetEntityCoords(targetPed)\n    if #(playerCoords - targetCoords) > 2.5 then return DropPlayer(src, "Attempted exploit abuse") end\n\n    local Target = QBCore.Functions.GetPlayer(targetId)\n    if not QBCore.Functions.GetPlayer(src) or not Target then return end\n\n    local TrackerMeta = Target.PlayerData.metadata["tracker"]\n    if TrackerMeta then\n        Target.Functions.SetMetaData("tracker", false)\n        TriggerClientEvent(\'QBCore:Notify\', targetId, Lang:t("success.anklet_taken_off"), \'success\')\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("success.took_anklet_from", {firstname = Target.PlayerData.charinfo.firstname, lastname = Target.PlayerData.charinfo.lastname}), \'success\')\n        TriggerClientEvent(\'police:client:SetTracker\', targetId, false)\n    else\n        Target.Functions.SetMetaData("tracker", true)\n        TriggerClientEvent(\'QBCore:Notify\', targetId, Lang:t("success.put_anklet"), \'success\')\n        TriggerClientEvent(\'QBCore:Notify\', src, Lang:t("success.put_anklet_on", {firstname = Target.PlayerData.charinfo.firstname, lastname = Target.PlayerData.charinfo.lastname}), \'success\')\n        TriggerClientEvent(\'police:client:SetTracker\', targetId, true)\n    end\nend)\n\nRegisterNetEvent(\'police:server:SyncSpikes\', function(table)\n    TriggerClientEvent(\'police:client:SyncSpikes\', -1, table)\nend)\n\n-- Threads\nCreateThread(function()\n    while true do\n        Wait(1000 * 60 * 10)\n        local curCops = GetCurrentCops()\n        TriggerClientEvent("police:SetCopCount", -1, curCops)\n    end\nend)\n\nCreateThread(function()\n    while true do\n        Wait(5000)\n        UpdateBlips()\n    end\nend)\n')))}u.isMDXComponent=!0},2596:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/qbpolicejob-d591c4cdf2b6984b9b33e3e6d613aa31.png"}}]);