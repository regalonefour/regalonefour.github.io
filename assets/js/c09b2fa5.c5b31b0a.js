"use strict";(self.webpackChunkr_14_documentation=self.webpackChunkr_14_documentation||[]).push([[4737],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>u});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},d=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),g=l(r),u=o,m=g["".concat(c,".").concat(u)]||g[u]||p[u]||i;return r?t.createElement(m,a(a({ref:n},d),{},{components:r})):t.createElement(m,a({ref:n},d))}));function u(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},2387:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=r(7462),o=(r(7294),r(3905));const i={sidebar_position:5,title:"Lock Tamperings",description:"Adding lock tamperings"},a="Setting up Lock Tampering Evidence",s={unversionedId:"r14-evidence/Setting Up Subsystems/locktamperings",id:"r14-evidence/Setting Up Subsystems/locktamperings",title:"Lock Tamperings",description:"Adding lock tamperings",source:"@site/docs/r14-evidence/Setting Up Subsystems/locktamperings.md",sourceDirName:"r14-evidence/Setting Up Subsystems",slug:"/r14-evidence/Setting Up Subsystems/locktamperings",permalink:"/r14-evidence/Setting Up Subsystems/locktamperings",draft:!1,editUrl:"https://github.com/regalonefour/regalonefour.github.io/blob/main/docs/r14-evidence/Setting Up Subsystems/locktamperings.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Lock Tamperings",description:"Adding lock tamperings"},sidebar:"tutorialSidebar",previous:{title:"Drug Testing",permalink:"/r14-evidence/Setting Up Subsystems/drugtesting"},next:{title:"Pardon Our Mess",permalink:"/r14-objects/intro"}},c={},l=[],d={toc:l};function p(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setting-up-lock-tampering-evidence"},"Setting up Lock Tampering Evidence"),(0,o.kt)("h1",{id:"out-of-the-box"},"Out of the Box"),(0,o.kt)("p",null,"Because r14-evidence adds the ability to create lock tampering evidence when players attempt to pick or break locks, there are no\nbuilt in event triggers in existing qb-core resources or third-party scripts. However, the ability to add this feature to your crime\nscripts is relatively simple and can be accomplished with some basic knowledge of lua. If you wish to attempt to add lock tampering\nevidence to your server, you can use the following guide to help you figure out where to do so!"),(0,o.kt)("h1",{id:"how-to-create-lock-tampering-evidence"},"How to Create Lock Tampering Evidence"),(0,o.kt)("p",null,"In order to create lock tampering evidence, we simply need to trigger the ",(0,o.kt)("inlineCode",{parentName:"p"},"'evidence:server:CreateLockTampering'")," network event\nfrom either a client-side or server-side script with the desired coords. Below we can see an example of how to properly trigger this\nevent from either the client or the server. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='r14-evidence Lock Tampering Event'",title:"'r14-evidence",Lock:!0,Tampering:!0,"Event'":!0},'TriggerServerEvent("evidence:server:CreateLockTampering", coords) -- from client-side\n\nTriggerEvent("evidence:server:CreateLockTampering", coords) -- from server-side\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Never make changes to ",(0,o.kt)("strong",{parentName:"p"},"ANY")," script without making a backup first, you never know what might happen!")),(0,o.kt)("h1",{id:"integrating-a-third-party-script"},"Integrating A Third Party Script"),(0,o.kt)("p",null,"To get an idea of how to add this event to our resources, we can take a look at the qb-storerobbery resource and where we\ncan add event triggers for lock tampering evidence. Because most scripts require the use of a lockpick to break into a\nregister or a door, we can begin by searching our files for ",(0,o.kt)("inlineCode",{parentName:"p"},"'lockpick'"),". Our first result is promising, and we can look\nat the code below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-storerobbery Lockpick Network Event Handler' showLineNumbers",title:"'qb-storerobbery",Lockpick:!0,Network:!0,Event:!0,"Handler'":!0,showLineNumbers:!0},'RegisterNetEvent(\'lockpicks:UseLockpick\', function(isAdvanced)\n    usingAdvanced = isAdvanced\n    for k in pairs(Config.Registers) do\n        local ped = PlayerPedId()\n        local pos = GetEntityCoords(ped)\n        local dist = #(pos - Config.Registers[k][1].xyz)\n        if dist <= 1 and not Config.Registers[k].robbed then\n            if CurrentCops >= Config.MinimumStoreRobberyPolice then\n                if usingAdvanced then\n                    lockpick(true)\n                    currentRegister = k\n                    if not IsWearingHandshoes() then\n                        // highlight-next-line\n                        TriggerServerEvent("evidence:server:CreateFingerDrop", pos)\n                    end\n                    if not copsCalled then\n                        local s1, s2 = GetStreetNameAtCoord(pos.x, pos.y, pos.z)\n                        local street1 = GetStreetNameFromHashKey(s1)\n                        local street2 = GetStreetNameFromHashKey(s2)\n                        local streetLabel = street1\n                        if street2 ~= nil then\n                            streetLabel = streetLabel .. " " .. street2\n                        end\n                        TriggerServerEvent("qb-storerobbery:server:callCops", "cashier", currentRegister, streetLabel, pos)\n                        copsCalled = true\n                    end\n                else\n                    lockpick(true)\n                    currentRegister = k\n                    if not IsWearingHandshoes() then\n                        // highlight-next-line\n                        TriggerServerEvent("evidence:server:CreateFingerDrop", pos)\n                    end\n                    if not copsCalled then\n                        local s1, s2 = GetStreetNameAtCoord(pos.x, pos.y, pos.z)\n                        local street1 = GetStreetNameFromHashKey(s1)\n                        local street2 = GetStreetNameFromHashKey(s2)\n                        local streetLabel = street1\n                        if street2 ~= nil then\n                            streetLabel = streetLabel .. " " .. street2\n                        end\n                        TriggerServerEvent("qb-storerobbery:server:callCops", "cashier", currentRegister, streetLabel, pos)\n                        copsCalled = true\n                    end\n\n                end\n\n            else\n                QBCore.Functions.Notify(Lang:t("error.minimum_store_robbery_police", { MinimumStoreRobberyPolice = Config.MinimumStoreRobberyPolice}), "error")\n            end\n        end\n    end\nend)\n')),(0,o.kt)("p",null,"We can alrady see the event triggers for fingerprint evidence here, and although we could add our lock tampering triggers here, thinking\nabout how this script works we can realize that by placing our code here it would create a lock tamper anytime a lockpick is used. Because\nwe want lock tamperings to reflect actually attempting to focibly open a lock, we can instead follow our code. In this case, we can see the\n",(0,o.kt)("inlineCode",{parentName:"p"},"lockpick()")," function here, and can investgiate it further!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-storerobbery Lockpick Function' showLineNumbers",title:"'qb-storerobbery",Lockpick:!0,"Function'":!0,showLineNumbers:!0},'function lockpick(bool)\n    SetNuiFocus(bool, bool)\n    SendNUIMessage({\n        action = "ui",\n        toggle = bool,\n    })\n    SetCursorLocation(0.5, 0.2)\nend\n')),(0,o.kt)("p",null,"This function leads us to an NUI trigger, and searching further in the script we can find two NUI Callbacks that correlate to a successful\nor failed attempt to pick the register lock. We can take a look at them below and find an appropriate place to place our lock tampering\nevent trigger."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-storerobbery Successful Lockpick NUI Callback' showLineNumbers",title:"'qb-storerobbery",Successful:!0,Lockpick:!0,NUI:!0,"Callback'":!0,showLineNumbers:!0},'RegisterNUICallback(\'success\', function(_, cb)\n    if currentRegister ~= 0 then\n        lockpick(false)\n        TriggerServerEvent(\'qb-storerobbery:server:setRegisterStatus\', currentRegister)\n        local lockpickTime = 25000\n        LockpickDoorAnim(lockpickTime)\n        QBCore.Functions.Progressbar("search_register", Lang:t("text.emptying_the_register"), lockpickTime, false, true, {\n            disableMovement = true,\n            disableCarMovement = true,\n            disableMouse = false,\n            disableCombat = true,\n        }, {\n            animDict = "veh@break_in@0h@p_m_one@",\n            anim = "low_force_entry_ds",\n            flags = 16,\n        }, {}, {}, function() -- Done\n            openingDoor = false\n            ClearPedTasks(PlayerPedId())\n            TriggerServerEvent(\'qb-storerobbery:server:takeMoney\', currentRegister, true)\n        end, function() -- Cancel\n            openingDoor = false\n            ClearPedTasks(PlayerPedId())\n            QBCore.Functions.Notify(Lang:t("error.process_canceled"), "error")\n            currentRegister = 0\n        end)\n        CreateThread(function()\n            while openingDoor do\n                TriggerServerEvent(\'hud:server:GainStress\', math.random(1, 3))\n                Wait(10000)\n            end\n        end)\n    else\n        SendNUIMessage({\n            action = "kekw",\n        })\n    end\n    cb(\'ok\')\nend)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='qb-storerobbery Failed Lockpick NUI Callback' showLineNumbers",title:"'qb-storerobbery",Failed:!0,Lockpick:!0,NUI:!0,"Callback'":!0,showLineNumbers:!0},'RegisterNUICallback(\'fail\', function(_ ,cb)\n    if usingAdvanced then\n        if math.random(1, 100) < 20 then\n            TriggerServerEvent("qb-storerobbery:server:removeAdvancedLockpick")\n            TriggerEvent(\'inventory:client:ItemBox\', QBCore.Shared.Items["advancedlockpick"], "remove")\n        end\n    else\n        if math.random(1, 100) < 40 then\n            TriggerServerEvent("qb-storerobbery:server:removeLockpick")\n            TriggerEvent(\'inventory:client:ItemBox\', QBCore.Shared.Items["lockpick"], "remove")\n        end\n    end\n    if (IsWearingHandshoes() and math.random(1, 100) <= 25) then\n        local pos = GetEntityCoords(PlayerPedId())\n        TriggerServerEvent("evidence:server:CreateFingerDrop", pos)\n        QBCore.Functions.Notify(Lang:t("error.you_broke_the_lock_pick"))\n    end\n    lockpick(false)\n    cb(\'ok\')\nend)\n')),(0,o.kt)("p",null,"For a failure, we can simply add an event trigger which will create a lock tamper anytime a player attempts to pick\na register and fails, but for a successful pick we may want to consider adding a chance of creating one instead. We\ncan see the code already exists in these two NUI Callback functions and we can use this code in our implementation."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='Modified qb-storerobbery Successful Lockpick NUI Callback' showLineNumbers",title:"'Modified","qb-storerobbery":!0,Successful:!0,Lockpick:!0,NUI:!0,"Callback'":!0,showLineNumbers:!0},'RegisterNUICallback(\'success\', function(_, cb)\n    if currentRegister ~= 0 then\n        lockpick(false)\n        TriggerServerEvent(\'qb-storerobbery:server:setRegisterStatus\', currentRegister)\n        local lockpickTime = 25000\n\n        // highlight-start\n        if math.random(1, 100) <= 25) then\n            local pos = GetEntityCoords(PlayerPedId())\n            TriggerServerEvent("evidence:server:CreateLockTampering", pos)\n        end\n        // highlight-end\n\n        LockpickDoorAnim(lockpickTime)\n        QBCore.Functions.Progressbar("search_register", Lang:t("text.emptying_the_register"), lockpickTime, false, true, {\n            disableMovement = true,\n            disableCarMovement = true,\n            disableMouse = false,\n            disableCombat = true,\n        }, {\n            animDict = "veh@break_in@0h@p_m_one@",\n            anim = "low_force_entry_ds",\n            flags = 16,\n        }, {}, {}, function() -- Done\n            openingDoor = false\n            ClearPedTasks(PlayerPedId())\n            TriggerServerEvent(\'qb-storerobbery:server:takeMoney\', currentRegister, true)\n        end, function() -- Cancel\n            openingDoor = false\n            ClearPedTasks(PlayerPedId())\n            QBCore.Functions.Notify(Lang:t("error.process_canceled"), "error")\n            currentRegister = 0\n        end)\n        CreateThread(function()\n            while openingDoor do\n                TriggerServerEvent(\'hud:server:GainStress\', math.random(1, 3))\n                Wait(10000)\n            end\n        end)\n    else\n        SendNUIMessage({\n            action = "kekw",\n        })\n    end\n    cb(\'ok\')\nend)\n')),(0,o.kt)("p",null,"We can pull the conditional statement from the failure NUI Callback which utilizes the ",(0,o.kt)("inlineCode",{parentName:"p"},"math.random()")," function to add\na chance of creating a lock tampering instead of either not creating one, or automatically creating one. We then need to get the\ncoords of the position we want to create our lock tampering evidence in a ",(0,o.kt)("inlineCode",{parentName:"p"},"vector3()")," format, and finally supply this value\nas the first and only argument for the event trigger."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='Modified qb-storerobbery Failed Lockpick NUI Callback' showLineNumbers",title:"'Modified","qb-storerobbery":!0,Failed:!0,Lockpick:!0,NUI:!0,"Callback'":!0,showLineNumbers:!0},'RegisterNUICallback(\'fail\', function(_ ,cb)\n    if usingAdvanced then\n        if math.random(1, 100) < 20 then\n            TriggerServerEvent("qb-storerobbery:server:removeAdvancedLockpick")\n            TriggerEvent(\'inventory:client:ItemBox\', QBCore.Shared.Items["advancedlockpick"], "remove")\n        end\n    else\n        if math.random(1, 100) < 40 then\n            TriggerServerEvent("qb-storerobbery:server:removeLockpick")\n            TriggerEvent(\'inventory:client:ItemBox\', QBCore.Shared.Items["lockpick"], "remove")\n        end\n    end\n    if (IsWearingHandshoes() and math.random(1, 100) <= 25) then\n        local pos = GetEntityCoords(PlayerPedId())\n        TriggerServerEvent("evidence:server:CreateFingerDrop", pos)\n        QBCore.Functions.Notify(Lang:t("error.you_broke_the_lock_pick"))\n    end\n\n    // highlight-next-line\n    TriggerServerEvent("evidence:server:CreateLockTampering", GetEntityCoords(PlayerPedId()))\n\n    lockpick(false)\n    cb(\'ok\')\nend)\n')),(0,o.kt)("p",null,"For our failed NUI Callback, we can simply add our event trigger anywhere in the function and it will be triggered whenever\nthe player tries and fails to lockpick a register in qb-storerobbery. In this case we will simply repeat the use of the\n",(0,o.kt)("inlineCode",{parentName:"p"},"PlayerPedId()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"GetEntityCoords()")," natives, but in a more optimized implementation we could rearrange this function\nto reduce our repeated fetching of a variable that we could instead use multiple times!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:"title='Further Modified qb-storerobbery Failed Lockpick NUI Callback' showLineNumbers",title:"'Further",Modified:!0,"qb-storerobbery":!0,Failed:!0,Lockpick:!0,NUI:!0,"Callback'":!0,showLineNumbers:!0},'RegisterNUICallback(\'fail\', function(_ ,cb)\n    if usingAdvanced then\n        if math.random(1, 100) < 20 then\n            TriggerServerEvent("qb-storerobbery:server:removeAdvancedLockpick")\n            TriggerEvent(\'inventory:client:ItemBox\', QBCore.Shared.Items["advancedlockpick"], "remove")\n        end\n    else\n        if math.random(1, 100) < 40 then\n            TriggerServerEvent("qb-storerobbery:server:removeLockpick")\n            TriggerEvent(\'inventory:client:ItemBox\', QBCore.Shared.Items["lockpick"], "remove")\n        end\n    end\n\n    // highlight-next-line\n    local pos = GetEntityCoords(PlayerPedId())\n\n    if (IsWearingHandshoes() and math.random(1, 100) <= 25) then\n        // highlight-next-line\n        TriggerServerEvent("evidence:server:CreateFingerDrop", pos)\n        QBCore.Functions.Notify(Lang:t("error.you_broke_the_lock_pick"))\n    end\n\n    // highlight-next-line\n    TriggerServerEvent("evidence:server:CreateLockTampering", pos)\n\n    lockpick(false)\n    cb(\'ok\')\nend)\n')),(0,o.kt)("p",null,"Rather than getting the position and entity handle of our player's ped twice, we can pull this variable out of the fingerprint\nconditional statement, and fetch it in the main part of the function so it is accessible for both event triggers below it. Once\nwe do this, we simply need to replace the function in our ",(0,o.kt)("inlineCode",{parentName:"p"},'"evidence:server:CreateLockTampering"')," event trigger with the\n",(0,o.kt)("inlineCode",{parentName:"p"},"pos")," variable which holds our coords."),(0,o.kt)("p",null,"This is of course a very simple implementation of tampering evidence, taking some more time to implement better logic for our\nevent triggers could make it where they are only generated if a fingerprint isn't, or we could make the chance of them dropping\na configurable option in our ",(0,o.kt)("inlineCode",{parentName:"p"},"config.lua")," file."))}p.isMDXComponent=!0}}]);